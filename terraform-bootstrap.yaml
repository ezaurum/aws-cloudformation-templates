AWSTemplateFormatVersion: '2010-09-09'
Description: 'Terraform Bootstrap - S3, DynamoDB, IAM Roles for State Management'

Parameters:
  ProjectName:
    Type: String
    Default: 'terraform-bootstrap'
    Description: 'Project name for resource naming'
  
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: [dev, staging, prod]
    Description: 'Environment name'

Resources:
  # S3 Bucket for Terraform State
  TerraformStateBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${ProjectName}-${Environment}-state-${AWS::AccountId}'
      VersioningConfiguration:
        Status: 'Enabled'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            NoncurrentVersionExpirationInDays: 90
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        CloudWatchConfigurations:
          - Event: 's3:ObjectCreated:*'

  # DynamoDB Table for State Locking
  TerraformStateLockTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub '${ProjectName}-${Environment}-locks'
      AttributeDefinitions:
        - AttributeName: 'LockID'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'LockID'
          KeyType: 'HASH'
      BillingMode: 'PAY_PER_REQUEST'
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  # KMS Key for additional encryption
  TerraformKMSKey:
    Type: 'AWS::KMS::Key'
    Properties:
      Description: 'KMS Key for Terraform state encryption'
      KeyPolicy:
        Statement:
          - Sid: Enable IAM policies
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow Terraform operations
            Effect: Allow
            Principal:
              AWS: !GetAtt TerraformOperatorRole.Arn
            Action:
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey'
            Resource: '*'

  TerraformKMSKeyAlias:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/${ProjectName}-${Environment}-terraform'
      TargetKeyId: !Ref TerraformKMSKey

  # IAM Role for Terraform Operations
  TerraformOperatorRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-terraform-operator'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              Service: 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/PowerUserAccess'
      Policies:
        - PolicyName: 'TerraformStateAccess'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:ListBucket'
                Resource:
                  - !GetAtt TerraformStateBucket.Arn
                  - !Sub '${TerraformStateBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - 'dynamodb:GetItem'
                  - 'dynamodb:PutItem'
                  - 'dynamodb:DeleteItem'
                Resource: !GetAtt TerraformStateLockTable.Arn
              - Effect: Allow
                Action:
                  - 'kms:Decrypt'
                  - 'kms:GenerateDataKey'
                Resource: !GetAtt TerraformKMSKey.Arn

Outputs:
  TerraformStateBucketName:
    Description: 'S3 Bucket name for Terraform state'
    Value: !Ref TerraformStateBucket
    Export:
      Name: !Sub '${ProjectName}-${Environment}-state-bucket'

  TerraformLockTableName:
    Description: 'DynamoDB table name for state locking'
    Value: !Ref TerraformStateLockTable
    Export:
      Name: !Sub '${ProjectName}-${Environment}-lock-table'

  TerraformOperatorRoleArn:
    Description: 'ARN of the Terraform operator role'
    Value: !GetAtt TerraformOperatorRole.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-operator-role-arn'

  KMSKeyId:
    Description: 'KMS Key ID for Terraform state encryption'
    Value: !Ref TerraformKMSKey
    Export:
      Name: !Sub '${ProjectName}-${Environment}-kms-key-id'